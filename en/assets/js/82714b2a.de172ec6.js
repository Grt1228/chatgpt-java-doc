"use strict";(self.webpackChunkchatgpt_java_doc=self.webpackChunkchatgpt_java_doc||[]).push([[2442],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(t),g=i,d=u["".concat(s,".").concat(g)]||u[g]||y[g]||o;return t?r.createElement(d,a(a({ref:n},c),{},{components:t})):r.createElement(d,a({ref:n},c))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=g;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[u]="string"==typeof e?e:i,a[1]=p;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},8644:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const o={id:"api_key_invalid",title:"\u81ea\u5b9a\u4e49Key\u5931\u6548\u540e\u5904\u7406\u7b56\u7565",hide_title:!1,sidebar_position:5},a=void 0,p={unversionedId:"core/api_key_invalid",id:"core/api_key_invalid",title:"\u81ea\u5b9a\u4e49Key\u5931\u6548\u540e\u5904\u7406\u7b56\u7565",description:"SDK\u652f\u6301key\u5931\u6548\u540e\u7684\u81ea\u5b9a\u4e49\u5904\u7406\u65b9\u6848\uff0c\u53ef\u4ee5\u8fdb\u884c\u5931\u6548\u540e\u7684\u79fb\u9664\u3002\u4e3b\u8981\u5b9e\u73b0\u903b\u8f91\u5c31\u662f\u81ea\u5b9a\u4e49OkHttpClient\u7684\u62e6\u622a\u5668\u3002",source:"@site/docs/core/05_\u81ea\u5b9a\u4e49Key\u5931\u6548\u540e\u5904\u7406\u7b56\u7565.md",sourceDirName:"core",slug:"/core/api_key_invalid",permalink:"/en/docs/core/api_key_invalid",draft:!1,editUrl:"https://github.com/Grt1228/chatgpt-java-doc/tree/main/docs/core/05_\u81ea\u5b9a\u4e49Key\u5931\u6548\u540e\u5904\u7406\u7b56\u7565.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"api_key_invalid",title:"\u81ea\u5b9a\u4e49Key\u5931\u6548\u540e\u5904\u7406\u7b56\u7565",hide_title:!1,sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Tokens\u8ba1\u7b97",permalink:"/en/docs/core/tiktoken"},next:{title:"Key\u5168\u90e8\u5931\u6548\u544a\u8b66\u914d\u7f6e",permalink:"/en/docs/core/all_api_key_invalid"}},s={},l=[{value:"1\u3001\u7236\u7c7bOpenAiAuthInterceptor",id:"1\u7236\u7c7bopenaiauthinterceptor",level:2},{value:"2\u3001\u521b\u5efa\u62e6\u622a\u5668\u7ee7\u627f\u62bd\u8c61\u7236\u7c7bOpenAiAuthInterceptor",id:"2\u521b\u5efa\u62e6\u622a\u5668\u7ee7\u627f\u62bd\u8c61\u7236\u7c7bopenaiauthinterceptor",level:2},{value:"3\u3001\u81ea\u5b9a\u4e49OkHttpClient\u5e76\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u62e6\u622a\u5668",id:"3\u81ea\u5b9a\u4e49okhttpclient\u5e76\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u62e6\u622a\u5668",level:2}],c={toc:l},u="wrapper";function y(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"SDK\u652f\u6301key\u5931\u6548\u540e\u7684\u81ea\u5b9a\u4e49\u5904\u7406\u65b9\u6848\uff0c\u53ef\u4ee5\u8fdb\u884c\u5931\u6548\u540e\u7684\u79fb\u9664\u3002\u4e3b\u8981\u5b9e\u73b0\u903b\u8f91\u5c31\u662f\u81ea\u5b9a\u4e49OkHttpClient\u7684\u62e6\u622a\u5668\u3002\n\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u7ee7\u627fOpenAiAuthInterceptor"),(0,i.kt)("li",{parentName:"ul"},"\u5b9e\u73b0onErrorDealApiKeys\uff0cnoHaveActiveKeyWarring\u65b9\u6cd5"),(0,i.kt)("li",{parentName:"ul"},"\u81ea\u5b9a\u4e49OkHttpClient\u5e76\u914d\u7f6eOpenAiAuthInterceptor\u62e6\u622a\u5668")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"\u4e0b\u9762\u4ee5",(0,i.kt)("strong",{parentName:"p"},"sdk\u9ed8\u8ba4\u7684\u5904\u7406\u65b9\u6848DynamicKeyOpenAiAuthInterceptor"),"\u4e3e\u4f8b\u3002\nDynamicKeyOpenAiAuthInterceptor\u53ea\u5904\u7406\u4e86\uff0c",(0,i.kt)("strong",{parentName:"p"},"key\u9519\u8bef\uff0c\u8d26\u53f7\u88ab\u5c01"),"\u8fd9\u4e24\u79cd\u5f02\u5e38\u60c5\u51b5\uff0c\u5176\u4ed6\u5f02\u5e38\u60c5\u51b5\u9700\u8981\u81ea\u5b9a\u4e49\u5b9e\u73b0\u3002")),(0,i.kt)("h2",{id:"1\u7236\u7c7bopenaiauthinterceptor"},"1\u3001\u7236\u7c7bOpenAiAuthInterceptor"),(0,i.kt)("p",null,"\u6ce8\u91ca\u5f88\u6e05\u695a\uff0c\u5177\u4f53\u65b9\u6cd5\u7684\u4f5c\u7528\u53ef\u4ee5\u76f4\u63a5\u770b\u6ce8\u91ca\u5373\u53ef\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public abstract class OpenAiAuthInterceptor implements Interceptor {\n\n\n    /**\n     * key \u96c6\u5408\n     */\n    @Getter\n    @Setter\n    private List<String> apiKey;\n    /**\n     * \u81ea\u5b9a\u4e49\u7684key\u7684\u4f7f\u7528\u7b56\u7565\n     */\n    @Getter\n    @Setter\n    private KeyStrategyFunction<List<String>, String> keyStrategy;\n\n    /**\n     * \u9884\u8b66\u89e6\u53d1\u53c2\u6570\u914d\u7f6e\uff0c\u914d\u7f6e\u53c2\u6570\u5b9e\u73b0\u98de\u4e66\u3001\u9489\u9489\u3001\u4f01\u4e1a\u5fae\u4fe1\u3001\u90ae\u7bb1\u9884\u8b66\u7b49\u529f\u80fd\n     */\n    @Getter\n    @Setter\n    private Map warringConfig;\n\n    /**\n     * \u81ea\u5b9a\u4e49apiKeys\u7684\u5904\u7406\u903b\u8f91\n     *\n     * @param errorKey \u9519\u8bef\u7684key\n     * @return \u8fd4\u56de\u503c\u662f\u65b0\u7684apiKeys\n     */\n    protected abstract List<String> onErrorDealApiKeys(String errorKey);\n\n    /**\n     * \u6240\u6709\u7684key\u90fd\u5931\u6548\u540e\uff0c\u81ea\u5b9a\u4e49\u9884\u8b66\u914d\u7f6e\n     * \u53ef\u4ee5\u901a\u8fc7warringConfig\u914d\u7f6e\u53c2\u6570\u5b9e\u73b0\u98de\u4e66\u3001\u9489\u9489\u3001\u4f01\u4e1a\u5fae\u4fe1\u3001\u90ae\u7bb1\u9884\u8b66\u7b49\n     */\n    protected abstract void noHaveActiveKeyWarring();\n\n\n    /**\n     * \u83b7\u53d6\u8bf7\u6c42key\n     *\n     * @return key\n     */\n    public final String getKey() {\n        if (CollectionUtil.isEmpty(apiKey)) {\n            this.noHaveActiveKeyWarring();\n            throw new BaseException(CommonError.NO_ACTIVE_API_KEYS);\n        }\n        return keyStrategy.apply(apiKey);\n    }\n\n    /**\n     * \u9ed8\u8ba4\u7684\u9274\u6743\u5904\u7406\u65b9\u6cd5\n     *\n     * @param key      api key\n     * @param original \u6e90\u8bf7\u6c42\u4f53\n     * @return \u8bf7\u6c42\u4f53\n     */\n    public Request auth(String key, Request original) {\n        Request request = original.newBuilder()\n                .header(Header.AUTHORIZATION.getValue(), "Bearer " + key)\n                .header(Header.CONTENT_TYPE.getValue(), ContentType.JSON.getValue())\n                .method(original.method(), original.body())\n                .build();\n        return request;\n    }\n}\n\n')),(0,i.kt)("h2",{id:"2\u521b\u5efa\u62e6\u622a\u5668\u7ee7\u627f\u62bd\u8c61\u7236\u7c7bopenaiauthinterceptor"},"2\u3001\u521b\u5efa\u62e6\u622a\u5668\u7ee7\u627f\u62bd\u8c61\u7236\u7c7bOpenAiAuthInterceptor"),(0,i.kt)("p",null,"\u5e76\u5b9e\u73b0\u7236\u7c7b\u62bd\u8c61\u65b9\u6cd5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'\n/**\n * \u63cf\u8ff0\uff1a\u52a8\u6001\u5904\u7406key\u7684\u9274\u6743\u62e6\u622a\u5668\n *\n * @author https:www.unfbx.com\n * @since 2023-04-25\n */\n@Getter\n@Slf4j\npublic class DynamicKeyOpenAiAuthInterceptor extends OpenAiAuthInterceptor {\n    /**\n     * \u8d26\u53f7\u88ab\u5c01\u4e86\n     */\n    private static final String ACCOUNT_DEACTIVATED = "account_deactivated";\n    /**\n     * key\u4e0d\u6b63\u786e\n     */\n    private static final String INVALID_API_KEY = "invalid_api_key";\n\n    /**\n     * \u8bf7\u6c42\u5934\u5904\u7406\n     *\n     */\n    public DynamicKeyOpenAiAuthInterceptor() {\n        this.setWarringConfig(null);\n    }\n\n    /**\n     * \u6784\u9020\u65b9\u6cd5\n     *\n     * @param warringConfig \u6240\u6709\u7684key\u90fd\u5931\u6548\u540e\u7684\u544a\u8b66\u53c2\u6570\u914d\u7f6e\n     */\n    public DynamicKeyOpenAiAuthInterceptor(Map warringConfig) {\n        this.setWarringConfig(warringConfig);\n    }\n\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        String key = getKey();\n        Request original = chain.request();\n        Request request = this.auth(key, original);\n        Response response = chain.proceed(request);\n        if (!response.isSuccessful()) {\n            String errorMsg = response.body().string();\n            if (response.code() == CommonError.OPENAI_AUTHENTICATION_ERROR.code()\n                    || response.code() == CommonError.OPENAI_LIMIT_ERROR.code()\n                    || response.code() == CommonError.OPENAI_SERVER_ERROR.code()) {\n                OpenAiResponse openAiResponse = JSONUtil.toBean(errorMsg, OpenAiResponse.class);\n                String errorCode = openAiResponse.getError().getCode();\n                log.error("--------\x3e \u8bf7\u6c42openai\u5f02\u5e38\uff0c\u9519\u8befcode\uff1a{}", errorCode);\n                log.error("--------\x3e \u8bf7\u6c42\u5f02\u5e38\uff1a{}", errorMsg);\n                //\u8d26\u53f7\u88ab\u5c01\u6216\u8005key\u4e0d\u6b63\u786e\u5c31\u79fb\u9664\u6389\n                if (ACCOUNT_DEACTIVATED.equals(errorCode) || INVALID_API_KEY.equals(errorCode)) {\n                    super.setApiKey(this.onErrorDealApiKeys(key));\n                }\n                throw new BaseException(openAiResponse.getError().getMessage());\n            }\n            //\u975e\u5b98\u65b9\u5b9a\u4e49\u7684\u9519\u8befcode\n            log.error("--------\x3e \u8bf7\u6c42\u5f02\u5e38\uff1a{}", errorMsg);\n            OpenAiResponse openAiResponse = JSONUtil.toBean(errorMsg, OpenAiResponse.class);\n            if (Objects.nonNull(openAiResponse.getError())) {\n                log.error(openAiResponse.getError().getMessage());\n                throw new BaseException(openAiResponse.getError().getMessage());\n            }\n            throw new BaseException(CommonError.RETRY_ERROR);\n        }\n        return response;\n    }\n\n\n    @Override\n    protected List<String> onErrorDealApiKeys(String errorKey) {\n        List<String> apiKey = super.getApiKey().stream().filter(e -> !errorKey.equals(e)).collect(Collectors.toList());\n        log.error("--------\x3e \u5f53\u524dApiKey\uff1a[{}] \u5931\u6548\u4e86\uff0c\u79fb\u9664\uff01", errorKey);\n        return apiKey;\n    }\n\n    /**\n     * \u6240\u6709\u7684key\u90fd\u5931\u6548\u540e\uff0c\u81ea\u5b9a\u4e49\u9884\u8b66\u914d\u7f6e\n     * \u4e0d\u914d\u7f6e\u76f4\u63a5return\n     */\n    @Override\n    protected void noHaveActiveKeyWarring() {\n        log.error("--------\x3e [\u544a\u8b66] \u6ca1\u6709\u53ef\u7528\u7684key\uff01\uff01\uff01");\n        return;\n    }\n\n    @Override\n    public Request auth(String key, Request original) {\n        return super.auth(key, original);\n    }\n}\n\n')),(0,i.kt)("h2",{id:"3\u81ea\u5b9a\u4e49okhttpclient\u5e76\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u62e6\u622a\u5668"},"3\u3001\u81ea\u5b9a\u4e49OkHttpClient\u5e76\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u62e6\u622a\u5668"),(0,i.kt)("p",null,"\u53c2\u8003\u6838\u5fc3\u529f\u80fd\u7b2c\u4e00\u7ae0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class Test {\n    public static void main(String[] args) {\n        OkHttpClient okHttpClient = new OkHttpClient\n                .Builder()\n                //\u81ea\u5b9a\u4e49key\u5f02\u5e38\u5904\u7406\u7b56\u7565\n                .authInterceptor(new DynamicKeyOpenAiAuthInterceptor())\n                .build();\n        OpenAiStreamClient client = OpenAiStreamClient.builder()\n                .apiKey(Arrays.asList("sk-********","sk-********"))\n                .okHttpClient(okHttpClient)//\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684okHttpClient\u5ba2\u6237\u7aef\n                .build();\n    }\n}\n')))}y.isMDXComponent=!0}}]);